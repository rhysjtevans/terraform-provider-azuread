# archives:
#   - files:
#       # Ensure only built binary is archived
#       - 'none*'
#     format: zip
#     name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
# before:
#   hooks:
#     - 'go mod download'
# builds:
#   - # Binary naming only required for Terraform CLI 0.12
#     binary: '{{ .ProjectName }}_v{{ .Version }}_x5'
#     env:
#       - CGO_ENABLED=0
#     flags:
#       - -trimpath
#     goos:
#       - darwin
#       - freebsd
#       - linux
#       - windows
#     goarch:
#       - '386'
#       - amd64
#       - arm
#       - arm64
#     ignore:
#       - goarch: arm
#         goos: windows
#       - goarch: arm64
#         goos: freebsd
#       - goarch: arm64
#         goos: windows
#     ldflags:
#       - -s -w -X main.Version={{.Version}}
#     mod_timestamp: '{{ .CommitTimestamp }}'
# checksum:
#   algorithm: sha256
#   extra_files:
#     - glob: 'terraform-registry-manifest.json'
#       name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
#   name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
# publishers:
#   - checksum: true
#     # Terraform CLI 0.10 - 0.11 perform discovery via HTTP headers on releases.hashicorp.com
#     # For providers which have existed since those CLI versions, exclude
#     # discovery by setting the protocol version headers to 5.
#     cmd: hc-releases upload -product {{ .ProjectName }} -version {{ .Version }} -file={{ .ArtifactPath }}={{ .ArtifactName }} -header=x-terraform-protocol-version=5 -header=x-terraform-protocol-versions=5.0
#     env:
#       - HC_RELEASES_HOST={{ .Env.HC_RELEASES_HOST }}
#       - HC_RELEASES_KEY={{ .Env.HC_RELEASES_KEY }}
#     extra_files:
#       - glob: 'terraform-registry-manifest.json'
#         name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
#     name: upload
#     signature: true
# release:
#   extra_files:
#     - glob: 'terraform-registry-manifest.json'
#       name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
#   ids:
#     - none
# signs:
#   - args: ["sign", "--dearmor", "--file", "${artifact}", "--out", "${signature}"]
#     artifacts: checksum
#     cmd: signore
#     signature: ${artifact}.sig
#   - args: ["sign", "--dearmor", "--file", "${artifact}", "--out", "${signature}"]
#     artifacts: checksum
#     cmd: signore
#     id: key-id
#     signature: ${artifact}.72D7468F.sig
# snapshot:
#   name_template: "{{ .Tag }}-next"
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
before:
  hooks:
    # this is just an example and not a requirement for provider building/publishing
    - go mod tidy
builds:
- env:
    # goreleaser does not work with CGO, it could also complicate
    # usage by users in CI/CD systems like Terraform Cloud where
    # they are unable to install libraries.
    - CGO_ENABLED=0
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    - -trimpath
  ldflags:
    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
  goos:
    - windows
    - linux
    - darwin
  goarch:
    - amd64
    - '386'
    - arm
    - arm64
  ignore:
    - goos: darwin
      goarch: '386'
  binary: '{{ .ProjectName }}_v{{ .Version }}'
archives:
- format: zip
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you 
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true
changelog:
  skip: true
